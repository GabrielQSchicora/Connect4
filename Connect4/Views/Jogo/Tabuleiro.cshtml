@model Connect4.Models.Jogo
@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "Tabuleiro";
}

<link rel="stylesheet" href="~/css/Tabuleiro.css" />

<ul id="players">
    <li id="PlayerId-@Model.Jogador1.Id">
        @if (Model.Jogador1 != null)
        {
            @Model.Jogador1.Nome
        }
        else
        {
            <span>---</span>
        }
    </li>
    <li id="PlayerId-@Model.Jogador2.Id">
        @if (Model.Jogador2 != null)
        {
            @Model.Jogador2.Nome
        }
        else
        {
            <span>---</span>
        }
    </li>
</ul>

<div id="jogadas">
    Numero de jogadas
    <span>0</span>
</div>

<div id="gameTitle">
    <span>@ViewData["tituloTabuleiro"] - Lig4</span>
</div>
<div id="Tabuleiro" class="tabuleiro"></div>

@section Scripts{
    <script src="~/js/Tabuleiro.js"></script>
    <script>
        $('#PlayerId-' +@UserManager.GetUserAsync(User).Result.JogadorId).addClass('SignedPlayer');
        jogoId = "@Model.Id";
        authPlayerId = "@ViewData["authPlayerId"]";
        obterJogoServidor(jogoId);
        setTimeout(function () {
            setInterval(function(){ VerificaJogadorAtual(jogoId); }, 5000);
        }, 5000);
    </script>
}