@model Connect4.Models.Jogo
@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "Lobby";
}

<style>
    div.players {
        width: 500px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 150px auto 40px;
    }

        div.players div:not(.x) {
            background-color: rgba(0, 0, 0, 0.5);
            padding: 15px;
            text-align: center;
            color: #FFF;
            font-weight: bold;
            font-size: 20px;
            border: 2px solid transparent;
        }

            div.players div:not(.x).SignedPlayer {
                border-color: #00ff0894;
            }

        div.players div.x {
            font-size: 40px;
            font-family: Arial;
            margin: 0 15px;
        }

    .InitGame {
        display: block !important;
        margin: 0 auto;
    }
</style>

<div class="players">
    <div class="p1" id="PlayerId-@Model.Jogador1.Id">
        @if (Model.Jogador1 != null)
        {
            @Model.Jogador1.Nome
        }
        else
        {
            <span>---</span>
        }
    </div>
    <div class="x">X</div>
    <div class="p2" id="PlayerId-@Model.Jogador2.Id">
        @if (Model.Jogador2 != null)
        {
            @Model.Jogador2.Nome
        }
        else
        {
            <span>---</span>
        }
    </div>
</div>

@if (Model.Jogador1 != null && Model.Jogador2 != null)
{
    <a asp-area="" asp-controller="Jogo" asp-action="Tabuleiro" asp-route-id="@Model.Id" class="InitGame btn btn-success">Iniciar</a>
}
else
{
    <button onclick="alert('Aguarde o adversário para iniciar.')" class="InitGame btn btn-success">Aguardando Adversário</button>
}

@section Scripts{
    <script>
        $('#PlayerId-' +@UserManager.GetUserAsync(User).Result.JogadorId).addClass('SignedPlayer');
    </script>
}